buildscript {
    ext.antlr4_version = antlr4_version
    ext.jgraphtVersion = jgraphtVersion

    repositories {
        mavenCentral()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "me.champeau.gradle:jmh-gradle-plugin:$jmh_gradle_plugin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'java'
apply plugin: "idea"
apply plugin: 'antlr'
apply plugin: "me.champeau.gradle.jmh"

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    //compile 'org.openjdk.jmh:jmh-generator-annprocess:1.14.1'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '+'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '+'
    compile "org.apache.logging.log4j:log4j-slf4j-impl:+"

    antlr "org.antlr:antlr4:$antlr4_version"
    compile "org.antlr:antlr4-runtime:$antlr4_version"
    compile "org.jgrapht:jgrapht-core:$jgraphtVersion"
    testCompile group: 'junit', name: 'junit', version: '+'
}

//generate grammar

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-long-messages"]

    outputDirectory = file( "src/main/java" )
}

sourceSets.main.java.srcDir file("$buildDir/generated-src/antlr/main/")

compileKotlin.dependsOn generateGrammarSource

idea {
    module {
        generatedSourceDirs += file("$buildDir/generated-src/antlr/main/")
    }
}


//generate grammar ends


compileKotlin {
    kotlinOptions {
        jvmTarget = kotlin_jvm_target
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = kotlin_jvm_target
    }
}

mainClassName = "np.NetworkProjection"

task singleJar(type: Jar) {
    manifest {
        attributes(
                "Main-Class": mainClassName
        )
    }
    from { configurations.test.collect { it.isDirectory() ? it : zipTree(it) } } with jar
}

jmh {
    jmhVersion = jmh_version
}